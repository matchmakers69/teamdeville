 @mixin breakpoint($point) {

    @if $point == desktop {
      @media (max-width: 1280px ) { @content; }
    }
    @else if $point == large-tab {
      @media (max-width: 1129px) { @content; }
    }
    @else if $point == tab {
      @media (max-width: 1047px) { @content; }
    }

    @else if $point == tablet-large {
      @media (min-width: 1024px)  { @content; }
    }

    @else if $point == tablet-medium{
      @media (min-width: 992px)  { @content; }
    }
  
    @else if $point == tablet-mini {
      @media (max-width: 992px)  { @content; }
    }
  
    @else if $point == mini-tab {
      @media (max-width: 767px)  { @content; }
    }
    @else if $point == phone {
      @media (max-width: 641px)  { @content; }
    }
  
    @else if $point == mobile-phone {
      @media (min-width: 641px)  { @content; }
    }
  
    @else if $point == small-phone {
      @media (max-width: 480px)  { @content; }
    }
  }
  
  
  @mixin placeholder {
    ::-webkit-input-placeholder {@content}
    :-moz-placeholder           {@content}
    ::-moz-placeholder          {@content}
    :-ms-input-placeholder      {@content}
  }
  
  @mixin box-sizing($box-model) {
    -webkit-box-sizing: $box-model; // Safari <= 5
       -moz-box-sizing: $box-model; // Firefox <= 19
            box-sizing: $box-model;
  }

@mixin pad {
    padding-left: 0;
    padding-right: 0;
    padding-top: 0;
    padding-bottom: 0;
  }
  
  @mixin mar {
    margin-left: 0;
    margin-right: 0;
    margin-top: 0;
    margin-bottom: 0;
  }
  
  
  @mixin relative {
    position: relative;
  }
  
  @mixin flex {
    display: flex;
  }

  @mixin borderRadius {
    border-radius: 12px;
  }

  @mixin boxShadow {
    box-shadow: 0px 0px 52px 3px rgba(0,0,0,0.3);
  }

  @mixin bezierTransition {
    transition: all .4s cubic-bezier(0.455, 0.030, 0.515, 0.955);
}
  
  @mixin align-items($align) {
    @if $align == center {
      align-items: center;
    }@else if $align == start {
      align-items:flex-start;
    }@else {
      align-items:flex-end;
    }
  
  }
  
  @mixin background-size($size) {
    @if $size == contain {
      background-size:contain;
    }@else {
       background-size:cover;
    }
  }
  
  @mixin flex-direction($direction) {
    @if $direction==row {
      flex-direction: row;
    } @else {
      flex-direction: column;
    }
  }
  
  @mixin margin-auto {
    margin: 0 auto;
  }
  
  @mixin absolute {
    position: absolute;
  }
  
  @mixin fixed {
    position: fixed;
  }
  
  @mixin height($height) {
    height: $height;
  }
  
  @mixin width($width) {
    width: $width;
  }
  
  
  
  @mixin block {
    display: block;
  }
  
  @mixin inline-block {
    display: inline-block;
  }

  @mixin clearfix {
    &:before,
    &:after {
      content: " ";
      display: table;
      line-height: 0;
      height: 0;
    }
    &:after {
      clear: both;
    }
    & {
      *zoom: 1;
    }
  }
  
  @mixin text-size($fs, $lh) {
    font-size: $fs;
    line-height: $lh;
  }
     
  @mixin margin-auto {
    margin: 0 auto;
  }
  
  @mixin reset-list {
    list-style: none;
    padding: 0;
    margin: 0;
  }
  
  @mixin uppercase {
    text-transform: uppercase;
  }
  
  @mixin lowercase {
    text-transform: lowercase;
  }
  
  @mixin block {
    display: block;
  }
  
  @mixin inline-block {
    display: inline-block;
  }
  
  @mixin align-center {
    text-align: center;
  }
  
  @mixin align-left {
    text-align: left;
  }
  
  @mixin align-right {
    text-align: right;
  }

  @mixin transition($what: all, $time: 0.2s, $how: ease-in-out) {
    -webkit-transition: $what $time $how;
    -moz-transition:    $what $time $how;
    -ms-transition:     $what $time $how;
    -o-transition:      $what $time $how;
    transition:         $what $time $how;
  }

  /* Transform
  ========================================================================== */

@mixin transform($transforms) {
  -moz-transform: $transforms;
    -o-transform: $transforms;
   -ms-transform: $transforms;
-webkit-transform: $transforms;
       transform: $transforms;
}
// rotate
@mixin rotate ($deg) {
  @include transform(rotate(#{$deg}deg));
}

// scale
@mixin scale($scale) {
@include transform(scale($scale));
} 
// translate
@mixin translate ($x, $y) {
@include transform(translate($x, $y));
}
// skew
@mixin skew ($x, $y) {
@include transform(skew(#{$x}deg, #{$y}deg));
}
//transform origin
@mixin transform-origin ($origin) {
 moz-transform-origin: $origin;
    -o-transform-origin: $origin;
   -ms-transform-origin: $origin;
-webkit-transform-origin: $origin;
       transform-origin: $origin;
}
  


